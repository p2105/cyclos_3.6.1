<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class dynamic-insert="true" dynamic-update="true" name="nl.strohalm.cyclos.entities.groups.Group" table="groups" abstract="true">
    	<cache usage="read-write"/>
        <id name="id" type="long">
		    <column name="id" sql-type="integer"/>
            <generator class="native"/>
        </id>
        <discriminator column="subclass" type="string" length="1"/>
        <property name="status" column="status" update="false" not-null="true" length="1">
            <type name="nl.strohalm.cyclos.utils.hibernate.StringValuedEnumType">
                <param name="enumClassName">nl.strohalm.cyclos.entities.groups.Group$Status</param>
            </type>
		</property>        
        <property name="name" column="name" length="100" not-null="true" type="string"/>
        <property name="description" column="description" type="text"/>
        <property name="loginPageName" type="string">
        	<column name="login_page_name" index="ix_login_page_name" length="20"/>
        </property>
        <property name="containerUrl" type="string" column="container_url"  length="100" />
        
		<component name="basicSettings" class="nl.strohalm.cyclos.entities.groups.BasicGroupSettings">
	        <property name="maxPasswordWrongTries" column="max_password_tries"/>
	        <property name="passwordLength" type="rangeConstraint">
	        	<column name="min_password_length" />
	        	<column name="max_password_length" />
	        </property>
	        <property name="passwordPolicy" column="password_policy" not-null="true" length="1">
	            <type name="nl.strohalm.cyclos.utils.hibernate.StringValuedEnumType">
	                <param name="enumClassName">nl.strohalm.cyclos.entities.groups.BasicGroupSettings$PasswordPolicy</param>
	            </type>
			</property>        
	        <property name="deactivationAfterMaxPasswordTries" type="timePeriod">
	        	<column name="deactivation_number" />
	        	<column name="deactivation_field" />
	        </property>
	        <property name="passwordExpiresAfter" type="timePeriod">
	        	<column name="password_expiration_number" />
	        	<column name="password_expiration_field" />
	        </property>
            <property name="transactionPassword" column="transaction_password" length="1">
                <type name="nl.strohalm.cyclos.utils.hibernate.StringValuedEnumType">
                    <param name="enumClassName">nl.strohalm.cyclos.entities.access.TransactionPassword</param>
                </type>
            </property>
	        <property name="transactionPasswordLength" type="integer">
	        	<column name="transaction_password_length" not-null="true" default="4"/>
	        </property>
	        <property name="maxTransactionPasswordWrongTries" column="max_tp_tries" type="integer" not-null="true"/>
 		</component>
        
        <bag name="elements" table="elements" inverse="true">
		    <key column="group_id"/>
			<one-to-many class="nl.strohalm.cyclos.entities.members.Element"/>
		</bag>
		
		<set name="permissions" table="permissions" order-by="permission" cascade="all">
		    <key>
		    	<column name="group_id" sql-type="integer" not-null="true" />
			</key>		    
		    <element column="permission" type="permission" not-null="true"/>
		</set>		

		<bag name="transferTypes" table="groups_transfer_types">
			<cache usage="read-write"/>
			<key>
			    <column name="group_id" sql-type="integer"/>
			</key>
			<many-to-many class="nl.strohalm.cyclos.entities.accounts.transactions.TransferType">
			    <column name="transfer_type_id" sql-type="integer"/>	
			</many-to-many>
		</bag>

		<bag name="conversionSimulationTTs" table="groups_conversion_simulation_transfer_types">
	    	<cache usage="read-write"/>
			<key>
			    <column name="group_id" sql-type="integer"/>
			</key>
			<many-to-many class="nl.strohalm.cyclos.entities.accounts.transactions.TransferType">
			    <column name="transfer_type_id" sql-type="integer"/>	
			</many-to-many>
		</bag>

		<bag name="paymentFilters" table="groups_payment_filters" inverse="true">
			<cache usage="read-write"/>
			<key>
			    <column name="group_id" sql-type="integer"/>
			</key>
			<many-to-many class="nl.strohalm.cyclos.entities.accounts.transactions.PaymentFilter">
                <column name="payment_filter_id" sql-type="integer"/>
			</many-to-many>
		</bag>

		<bag name="groupFilters" table="group_filters_groups" inverse="true">
			<cache usage="read-write"/>
			<key>
			    <column name="group_id" sql-type="integer"/>
			</key>
			<many-to-many class="nl.strohalm.cyclos.entities.groups.GroupFilter">
                <column name="group_filter_id" sql-type="integer"/>
			</many-to-many>
		</bag>
       
		<bag name="customizedFiles" table="files" inverse="true" cascade="delete">
		    <key column="group_id"/>
			<one-to-many class="nl.strohalm.cyclos.entities.customization.files.CustomizedFile"/>
		</bag>
		
		<bag name="memberRecordTypes" table="groups_member_record_types" inverse="true">
	    	<cache usage="read-write"/>
			<key>
			    <column name="group_id" sql-type="integer"/>
			</key>
			<many-to-many class="nl.strohalm.cyclos.entities.members.records.MemberRecordType">
                <column name="member_record_type_id" sql-type="integer"/>
			</many-to-many>
		</bag>

		<bag name="guaranteeTypes" table="group_guarantee_types">
	    	<cache usage="read-write"/>
			<key>
                <column name="group_id" sql-type="integer"/>
			</key>
			<many-to-many class="nl.strohalm.cyclos.entities.accounts.guarantees.GuaranteeType">
			    <column name="guarantee_type_id" sql-type="integer"/>
			</many-to-many>
		</bag>		
        
	</class>
</hibernate-mapping>